"""create tables

Revision ID: ba4f8cf449a5
Revises: c5295ef67947
Create Date: 2024-08-02 14:33:53.165942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ba4f8cf449a5'
down_revision: Union[str, None] = 'c5295ef67947'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('filters',
    sa.Column('is_has_logo', sa.Boolean(), nullable=False),
    sa.Column('logo', sa.String(length=4), nullable=False),
    sa.Column('is_has_brand', sa.Boolean(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('is_bigger_then_date', sa.Boolean(), nullable=False),
    sa.Column('date', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('before_parsing_filename', sa.String(), nullable=False),
    sa.Column('after_parsing_filename', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('finish_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filter_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['filter_id'], ['filters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('proxys', sa.Column('is_banned', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_parsing', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_parsing')
    op.drop_column('proxys', 'is_banned')
    op.drop_table('files')
    op.drop_table('filters')
    # ### end Alembic commands ###
