"""check revision

Revision ID: faa91b992ad3
Revises: 
Create Date: 2024-09-06 00:34:44.948001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'faa91b992ad3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('fullname', sa.String(length=256), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_parsing', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('newfilters',
    sa.Column('deep_filter', sa.Integer(), nullable=True),
    sa.Column('deep_analog', sa.Integer(), nullable=True),
    sa.Column('analog', sa.Boolean(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('is_bigger', sa.Boolean(), nullable=True),
    sa.Column('date', sa.Integer(), nullable=True),
    sa.Column('logo', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proxys',
    sa.Column('expired_at', sa.DateTime(), nullable=False),
    sa.Column('id_proxy', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('ip_with_port', sa.String(), nullable=False),
    sa.Column('_is_banned', sa.Boolean(), nullable=True),
    sa.Column('when_banned', sa.DateTime(), nullable=True),
    sa.Column('is_using', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('before_parsing_filename', sa.String(), nullable=False),
    sa.Column('after_parsing_filename', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('finish_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('new_filter_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['new_filter_id'], ['newfilters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parsers',
    sa.Column('article', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('article1', sa.String(), nullable=False),
    sa.Column('quantity', sa.String(), nullable=False),
    sa.Column('price', sa.String(), nullable=False),
    sa.Column('batch', sa.String(), nullable=False),
    sa.Column('nds', sa.String(), nullable=False),
    sa.Column('best_price', sa.String(), nullable=False),
    sa.Column('logo', sa.String(), nullable=False),
    sa.Column('delivery_time', sa.String(), nullable=False),
    sa.Column('new_price', sa.String(), nullable=True),
    sa.Column('quantity1', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parsers')
    op.drop_table('files')
    op.drop_table('proxys')
    op.drop_table('newfilters')
    op.drop_table('users')
    # ### end Alembic commands ###
